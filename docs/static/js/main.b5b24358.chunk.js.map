{"version":3,"sources":["components/category/add.jsx","components/gif-grid-item/item.jsx","helpers/gifs.js","components/gif-grid/grid.jsx","hooks/use-fetch-gifs.js","gif-expert-app.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","onChange","target","value","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","otherValues","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yOA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACDC,mBAAS,IADR,mBAC/BC,EAD+B,KACnBC,EADmB,KAYvC,OACI,0BAAMC,SARW,SAAAC,GACjBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,SAXL,SAAAN,GAAK,OAAIF,EAAcE,EAAMO,OAAOC,QAWNA,MAAOX,M,OCFhDY,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,OAChB,yBAAKC,UAAU,0CACX,2BAAIF,GACJ,yBAAKG,IAAKF,EAAKG,IAAKJ,M,uBCNfK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEIG,MAAMR,GAFV,cAEbS,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIf,EAAP,EAAOA,MAAOgB,EAAd,EAAcA,OAAd,MAA4B,CAC9CD,KACAf,QACAC,IAAG,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBhB,QAPf,kBASZY,GATY,4CAAH,sDC2BLK,EAtBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACVpB,mBAAS,CAAC0B,KAAM,GAAIO,SAAS,IADnB,mBAC9BC,EAD8B,KACvBC,EADuB,KAQtC,OALAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAV,GAAI,OAAIQ,EAAS,CAAET,KAAMC,EAAMM,SAAS,SACnD,CAACb,IAEGc,EDJmBI,CAAalB,GAA/BM,EAFsB,EAEtBA,KAAMO,EAFgB,EAEhBA,QAEd,OACI,oCACI,wBAAIjB,UAAU,qCAAsCI,GAClDa,GAAY,0BAAMjB,UAAU,oCAAhB,eACd,yBAAKA,UAAU,aAEPU,EAAKE,KAAI,gBAAEC,EAAF,EAAEA,GAAOU,EAAT,6BACL,kBAAC,EAAD,eACIC,IAAKX,GACDU,UEMjBE,EAnBM,WAAO,IAAD,EACezC,mBAAS,CAAC,cADzB,mBACf0C,EADe,KACH3C,EADG,KAOvB,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAExB2C,EAAWd,KAAI,SAAAR,GAAQ,OAAK,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,S,MCb9EuB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.b5b24358.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n    const [ inputValue, setInputValue ] = useState('');\n\n    const onChangeValue = event => setInputValue(event.target.value);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (inputValue.trim().length > 2 ) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" onChange={onChangeValue} value={inputValue}/>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\n\n\nexport default AddCategory;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({ title, url }) => (\n    <div className=\"card animate__animated animate__fadeIn\">\n        <p>{title}</p>\n        <img src={url} alt={title} />\n    </div>\n);\n\nGifGridItem.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n}\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kbWRqpxqRpPELCiCKkrDAzj3zj7wKxCV`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n    const gifs = data.map(({ id, title, images }) => ({\n        id,\n        title,\n        url: images?.downsized_medium.url\n    }));\n    return gifs;\n}","import React from \"react\";\n\nimport GifGridItem from \"../gif-grid-item/item\";\nimport { useFetchGifs } from \"../../hooks/use-fetch-gifs\";\n\nconst GifGrid = ({ category }) => {\n\n    const { data, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            { loading  && <span className=\"animate__animated animate__flash\">Cargando...</span> }\n            <div className=\"card-grid\">\n                {\n                    data.map(({id, ...otherValues}) => (\n                        <GifGridItem\n                            key={id}\n                            {...otherValues}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/gifs\";\n\nexport const useFetchGifs = (category) => {\n    const [ state, setState ] = useState({data: [], loading: true});\n\n    useEffect(() => {\n        getGifs(category)\n            .then(gifs => setState({ data: gifs, loading: false }));\n    }, [category]);\n\n    return state;\n}","import React, { useState } from 'react';\n\nimport AddCategory from \"./components/category/add\";\nimport GifGrid from \"./components/gif-grid/grid\";\n\nconst GifExpertApp = () => {\n    const [ categories, setCategories ] = useState(['One Punch']);\n\n    /*const handleAdd = () => {\n        setCategories([...categories, 'Hunter']);\n        // setCategories(cats => [...cats, 'HunterXHunter']);\n    }*/\n    return (\n        <>\n            <h2>GifExpertapp</h2>\n            <hr/>\n            <AddCategory setCategories={setCategories}/>\n            {\n                categories.map(category => (<GifGrid key={category} category={category} />))\n            }\n        </>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './gif-expert-app';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}